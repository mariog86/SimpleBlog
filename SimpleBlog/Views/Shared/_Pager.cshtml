@model SimpleBlog.Models.ListViewModel

@* Read the current page and total pages *@

@{
    var currentPage = ViewContext.RequestContext.HttpContext.Request["p"] != null
      ? int.Parse(ViewContext.RequestContext.HttpContext.Request["p"])
      : 1;

    var totalPages = Math.Ceiling((double)Model.TotalPosts / 10);
}

@* Check do we need to display pagination links *@

@if (currentPage > 1 || currentPage < totalPages)
{
  var p = $"p={currentPage - 1}";
  var n = $"p={currentPage + 1}";

    @* If the view is rendered for "search" action append the pagination value with "&" *@

if (ViewContext.RouteData.Values["action"].ToString()
  .Equals("search", StringComparison.OrdinalIgnoreCase))
{
  var s = $"?s={ViewContext.RequestContext.HttpContext.Request.QueryString["s"]}";
  p = $"{s}&{p}";
  n = $"{s}&{n}";
}
else
{
  p = String.Concat("?", p);
  n = String.Concat("?", n);
}

  <!--pagination links-->
    <div class="pager">

      <a href="@p" title="Previous" class="previous"
         style="visibility:@(currentPage > 1 ? "visible" : "collapse")"><< previous</a>

      <a href="@n" title="Next" class="next"
         style="visibility:@(currentPage < totalPages ? "visible" : "collapse")">next >></a>

    </div>
}